{"version":3,"sources":["firebase.js","Components/address.js","Routes/Home.js","Components/Registraion.js","Routes/Enroll.js","Components/Header.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Address","state","person","key","name","telephone","email","address","people","switchModify","switchModifyIdx","updateData","collection","get","then","docs","forEach","doc","data","push","id","setState","handleChange","event","val","target","value","handleSubmit","e","preventDefault","update","add","handleTitle","info","title","handleModify","filter","handleDelete","delete","this","Column","Table","justify","align","span","dataSource","dataIndex","render","record","size","onClick","React","Component","Home","props","Registraion","formItemLayout","labelCol","wrapperCol","buttonItemLayout","offset","layout","Object","keys","map","idx","Item","label","onChange","type","Enroll","Header","className","mode","icon","UnorderedListOutlined","to","FormOutlined","exact","path","component","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1f36fca2.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyDTnxgF9Zvrf0wJ3FwnDtrhqc4sl1Drd-E',\n    authDomain: 'address-book-6f730.firebaseapp.com',\n    databaseURL: 'https://address-book-6f730.firebaseio.com',\n    projectId: 'address-book-6f730',\n    storageBucket: 'address-book-6f730.appspot.com',\n    messagingSenderId: '1055484033053',\n    appId: '1:1055484033053:web:b4149da1e10b16a7702ef4',\n    measurementId: 'G-65P8CHRKLB',\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst firestore = new firebase.firestore();\n\nexport { firestore };\n","import React from 'react';\nimport { firestore } from '../firebase';\nimport { Row, Col, Button, Table, Space } from 'antd';\n\nclass Address extends React.Component {\n    state = {\n        person: {\n            key: '',\n            name: '',\n            telephone: '',\n            email: '',\n            address: '',\n        },\n        people: [],\n    };\n\n    componentDidMount() {\n        this.updateData();\n    }\n\n    switchModify = false;\n    switchModifyIdx = null;\n\n    updateData = () => {\n        const people = [];\n        firestore\n            .collection('address')\n            .get()\n            .then((docs) => {\n                docs.forEach((doc) => {\n                    const person = doc.data();\n                    // console.log(person);\n                    people.push({\n                        key: doc.id,\n                        name: person.name,\n                        telephone: person.telephone,\n                        email: person.email,\n                        address: person.address,\n                    });\n                });\n                this.setState({\n                    person: {\n                        key: '',\n                        name: '',\n                        telephone: '',\n                        email: '',\n                        address: '',\n                    },\n                    people,\n                });\n            });\n    };\n\n    handleChange = (event) => {\n        let val = event.target.value;\n        const id = event.target.id;\n        const { person } = this.state;\n\n        this.setState({\n            person: {\n                key: id === 'key' ? val : person.key,\n                name: id === 'name' ? val : person.name,\n                telephone: id === 'telephone' ? val : person.telephone,\n                email: id === 'email' ? val : person.email,\n                address: id === 'address' ? val : person.address,\n            },\n        });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.switchModify) {\n            firestore\n                .collection('address')\n                .doc(this.switchModifyIdx)\n                .update(this.state.person)\n                .then(() => {\n                    this.updateData();\n                });\n        } else {\n            firestore\n                .collection('address')\n                .add(this.state.person)\n                .then(() => {\n                    this.updateData();\n                });\n        }\n\n        this.switchModify = false;\n    };\n\n    handleTitle = (info) => {\n        let title;\n        switch (info) {\n            case 'id':\n                title = 'ID';\n                break;\n            case 'name':\n                title = '이름';\n                break;\n            case 'telephone':\n                title = '연락처';\n                break;\n            case 'email':\n                title = '이메일';\n                break;\n            case 'address':\n                title = '주소';\n                break;\n            default:\n                title = '';\n        }\n        return title;\n    };\n\n    handleModify = (id) => {\n        firestore\n            .collection('address')\n            .doc(id)\n            .get()\n            .then(() => {\n                const person = this.state.people.filter((person) => person.key === id)[0];\n                this.setState({\n                    person,\n                });\n            });\n        this.switchModify = true;\n        this.switchModifyIdx = id;\n    };\n\n    handleDelete = (id) => {\n        firestore\n            .collection('address')\n            .doc(id)\n            .delete()\n            .then(() => {\n                const people = this.state.people.filter((person) => person.key !== id);\n                this.setState({ people });\n            });\n    };\n\n    render() {\n        const { people } = this.state;\n\n        const { Column } = Table;\n\n        return (\n            <>\n                <Row justify='space-around' align='middle'>\n                    <Col span={22}>\n                        <Table dataSource={people}>\n                            <Column title='Name' dataIndex='name' key='name' />\n                            <Column title='Telephone' dataIndex='telephone' key='telephone' />\n                            <Column title='Email' dataIndex='email' key='email' />\n                            <Column title='Address' dataIndex='address' key='address' />\n                            <Column\n                                title='Action'\n                                key='action'\n                                render={(record) => (\n                                    <Space size='middle'>\n                                        <Button onClick={() => this.handleModify(record.key)}>\n                                            Modify\n                                        </Button>\n                                        <Button onClick={() => this.handleDelete(record.key)}>\n                                            Delete\n                                        </Button>\n                                    </Space>\n                                )}\n                            />\n                        </Table>\n                    </Col>\n                </Row>\n            </>\n        );\n    }\n}\n\nexport default Address;\n","import React from 'react';\nimport Address from '../Components/address';\n\nconst Home = (props) => {\n    return (\n        <>\n            <Address />\n        </>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport { firestore } from '../firebase';\nimport { Row, Col, Form, Input, Button, Table } from 'antd';\n\nclass Registraion extends React.Component {\n    state = {\n        person: {\n            key: '',\n            name: '',\n            telephone: '',\n            email: '',\n            address: '',\n        },\n        people: [],\n    };\n\n    componentDidMount() {\n        this.updateData();\n    }\n\n    switchModify = false;\n    switchModifyIdx = null;\n\n    updateData = () => {\n        const people = [];\n        firestore\n            .collection('address')\n            .get()\n            .then((docs) => {\n                docs.forEach((doc) => {\n                    const person = doc.data();\n                    people.push({\n                        key: doc.id,\n                        name: person.name,\n                        telephone: person.telephone,\n                        email: person.email,\n                        address: person.address,\n                    });\n                });\n                this.setState({\n                    person: {\n                        key: '',\n                        name: '',\n                        telephone: '',\n                        email: '',\n                        address: '',\n                    },\n                    people,\n                });\n            });\n    };\n\n    handleChange = (event) => {\n        let val = event.target.value;\n        const id = event.target.id;\n        const { person } = this.state;\n\n        this.setState({\n            person: {\n                key: id === 'key' ? val : person.key,\n                name: id === 'name' ? val : person.name,\n                telephone: id === 'telephone' ? val : person.telephone,\n                email: id === 'email' ? val : person.email,\n                address: id === 'address' ? val : person.address,\n            },\n        });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.switchModify) {\n            firestore\n                .collection('address')\n                .doc(this.switchModifyIdx)\n                .update(this.state.person)\n                .then(() => {\n                    this.updateData();\n                });\n        } else {\n            firestore\n                .collection('address')\n                .add(this.state.person)\n                .then(() => {\n                    this.updateData();\n                });\n        }\n\n        this.switchModify = false;\n    };\n\n    handleTitle = (info) => {\n        let title;\n        switch (info) {\n            case 'id':\n                title = 'ID';\n                break;\n            case 'name':\n                title = '이름';\n                break;\n            case 'telephone':\n                title = '연락처';\n                break;\n            case 'email':\n                title = '이메일';\n                break;\n            case 'address':\n                title = '주소';\n                break;\n            default:\n                title = '';\n        }\n        return title;\n    };\n\n    handleModify = (id) => {\n        firestore\n            .collection('address')\n            .doc(id)\n            .get()\n            .then(() => {\n                const person = this.state.people.filter((person) => person.key === id)[0];\n                this.setState({\n                    person,\n                });\n            });\n        this.switchModify = true;\n        this.switchModifyIdx = id;\n    };\n\n    handleDelete = (id) => {\n        firestore\n            .collection('address')\n            .doc(id)\n            .delete()\n            .then(() => {\n                const people = this.state.people.filter((person) => person.key !== id);\n                this.setState({ people });\n            });\n    };\n\n    render() {\n        const { person, people } = this.state;\n\n        const formLayout = 'horizontal';\n        const formItemLayout =\n            formLayout === 'horizontal'\n                ? {\n                      labelCol: { span: 2 },\n                      wrapperCol: { span: 21 },\n                  }\n                : null;\n        const buttonItemLayout =\n            formLayout === 'horizontal'\n                ? {\n                      wrapperCol: { span: 21, offset: 2 },\n                  }\n                : null;\n\n        const { Column } = Table;\n\n        return (\n            <>\n                <Row justify='space-around' align='middle'>\n                    <Col span={22}>\n                        <Form layout={formLayout}>\n                            {Object.keys(person).map((info, idx) =>\n                                info === 'key' ? (\n                                    ''\n                                ) : (\n                                    <Form.Item\n                                        key={idx}\n                                        label={this.handleTitle(info)}\n                                        {...formItemLayout}\n                                    >\n                                        <Input\n                                            id={info}\n                                            value={this.state.person[info]}\n                                            onChange={this.handleChange}\n                                        />\n                                    </Form.Item>\n                                )\n                            )}\n                            <Form.Item {...buttonItemLayout}>\n                                <Button type='primary' onClick={this.handleSubmit}>\n                                    Submit\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </>\n        );\n    }\n}\n\nexport default Registraion;\n","import React from 'react';\nimport Registraion from '../Components/Registraion';\nimport Address from '../Components/address';\n\nconst Enroll = (props) => {\n    return (\n        <>\n            <Registraion />\n            <Address />\n        </>\n    );\n};\n\nexport default Enroll;\n","import React from 'react';\nimport { BrowserRouter as Router, Link, Switch, Route } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport { UnorderedListOutlined, FormOutlined } from '@ant-design/icons';\n\nimport Home from '../Routes/Home';\nimport Enroll from '../Routes/Enroll';\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <Router>\n                <Menu className='uk-navbar-nav' mode='horizontal'>\n                    <Menu.Item icon={<UnorderedListOutlined />}>\n                        <Link to='/'>List</Link>\n                    </Menu.Item>\n                    <Menu.Item icon={<FormOutlined />}>\n                        <Link to='/enroll'>Register</Link>\n                    </Menu.Item>\n                </Menu>\n\n                <Switch>\n                    <Route exact path='/' component={Home} />\n                    <Route path='/enroll' component={Enroll} />\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport Header from './Components/Header';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <>\n                <Header />\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\n\nReactDOM.render(\n    <>\n        <App />\n    </>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}